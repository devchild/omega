    Flc()(1) was designed after bf(flex)(1) and bf(flex++)(1). Like these
latter two programs flc() generates code performing pattern-matching on text,
possibly executing actions when the input matches its em(regular expressions).

    Contrary to bf(flex) and bf(flex++), flc() generates code that is
explicitly intended for use by bf(C++) programs. The well-known bf(flex)(1)
program generates bf(C) source-code and bf(flex++)(1) merely offers a
bf(C++)-like shell around the tt(yylex) function generated by bf(flex)(1) and
hardly supports present-day ideas about bf(C++) software design.

    Flc() creates a bf(C++) class offering a predefined member function
bf(lex) which matches input against regular expressions and possibly executes
bf(C++) code once regular expressions are matched. The code generated by
bf(flexc++) is pure bf(C++), allowing its users to apply all of the features
offered by that language.

    Flc()'s synopsis is:
    quote(
        flc() [OPTIONS] tt(rules-file)
    )
    Its options are covered in section ref(OPTIONS), the format of its
rules-file is discussed in chapter ref(FILEFORMAT).
